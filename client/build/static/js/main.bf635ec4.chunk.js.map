{"version":3,"sources":["components/ThreadEditor/threadEditor.js","components/threadTextDisplay/threadTextDisplay.js","utlis/API.js","pages/ThreadMain/threadMain.js","components/Post/post.js","components/PostEditor/postEditor.js","pages/ThreadDisplay/threadDisplay.js","components/Nav/nav.js","components/LoginPage/signIn.js","components/LoginPage/signUp.js","App.js","registerServiceWorker.js","index.js"],"names":["ThreadEditor","state","title","body","date","Date","now","handleTitleInputChange","event","_this","setState","target","value","handleBodyInputChange","createThread","preventDefault","console","log","newEntry","user","props","addThread","react_default","a","createElement","className","lib","label","this","onChange","type","waves","onClick","right","Component","ThreadTextDisplay","m","s","header","key","href","API","getThreads","axios","get","saveThreads","threadData","post","getPosts","savePosts","postData","ThreadMain","threads","loadThreads","then","res","newState","catch","err","newThread","concat","Object","toConsumableArray","map","index","threadTextDisplay","threadEditor","Post","PostEditor","handlePostEditorInputChange","ev","createPost","addPost","ThreadDisplay","posts","id","loadPosts","newPostBody","Post_post","postEditor","Nav","alignLinks","signIn","email","password","handleChange","e","defineProperty","hanldeSubmit","onSubmit","handleSubmit","htmlFor","signUp","firstName","lastName","App","react_router_dom","nav","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bf635ec4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { TextInput, Button, Icon } from 'react-materialize';\n\n\n\tclass ThreadEditor extends Component {\n\n\t\tstate = {\n\t\t\t\n\t\t\t\ttitle: '', \n\t\t\t\tbody: '',\n\t\t\t\tdate: Date.now\n\t\t}\n\t\t\n\thandleTitleInputChange = event => {\n\t\tthis.setState({\n\t\t  title: event.target.value\n\t\t});\n\t  };\n\n\t  \t\n\thandleBodyInputChange = event => {\n\t\tthis.setState({\n\t\t  body: event.target.value\n\t\t});\n\t  };\n\n\t  createThread = event => {\n\t\tevent.preventDefault();\n\t\tconsole.log(\"test\");\n\t\tconst newEntry = {user:\"\", body: this.state.body, title: this.state.title, date: Date.now};\n\t\tthis.props.addThread(newEntry);\n\t\tthis.setState({\n\t\t\tbody: '',\n\t\t\tdate: '',\n\t\t\ttitle: ''\n\t\t});\n\t\t \n\t\t}\n\n\n\t\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<div className='card content'>\n\t\t\t\t\t<TextInput className=\"thread-title-input\" label=\"Thread Title\" value={this.state.title} onChange={this.handleTitleInputChange}/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='card content'>\n\t\t\t\t\t<TextInput className=\"thread-body-input\" label=\"Start the conversatrion!\" value={this.state.body} onChange={this.handleBodyInputChange}/>\n\t\t\t\t</div>\n\t\t\n\t\t\t\t\t<Button className=\"thread-editor-button\" type=\"submit\" waves=\"light\" onClick={this.createThread}>\n\t\t\t\t\t\tPost\n                <Icon right>\n\t\t\t\t\t\t\tsend\n                </Icon>\n\t\t\t\t\t</Button>\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\texport default ThreadEditor\n\n\n\t\t\n","import React from 'react';\nimport { Row, Col, Collection, CollectionItem, Icon } from 'react-materialize';\n\n\nconst ThreadTextDisplay = (props) => {\n\treturn (\n\n\n\n\n\t\t<Row>\n\t\t\t<Col m={6} s={12}>\n\t\t\t\t<Collection header={props.title}>\n\t\t\t\t\t<CollectionItem>\n\t\t\t\t\t\t<div className=\"text-display\" key={props.key}>\n\t\t\t\t\t\t\t{props.body}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<a href=\"/thread\" className=\"secondary-content\">\n\t\t\t\t\t\t\t<Icon>\n\t\t\t\t\t\t\t\tsend\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</CollectionItem>\n\t\t\t\t</Collection>\n\t\t\t</Col>\n\t\t</Row>\n\t);\n}\n\nexport default ThreadTextDisplay\n","import axios from \"axios\";\n\nexport default {\n\n\tgetThreads: function() {\n\t\treturn axios.get(\"/api/post/forum\")\n\t},\n\n\tsaveThreads: function(threadData) {\n\t\treturn axios.post(\"/api/post/forum\", threadData);\n\t  },\n\t\n\t  getPosts: function() {\n\t\treturn axios.get(\"/api/post/thread\")\n\t},\n\n\tsavePosts: function(postData) {\n\t\treturn axios.post(\"/api/post/thread\", postData);\n\t},\n};","import React, { Component } from 'react';\nimport ThreadEditor from \"../../components/ThreadEditor/threadEditor\";\nimport ThreadTextDisplay from \"../../components/threadTextDisplay/threadTextDisplay\"\nimport API from \"../../utlis/API\";\nclass ThreadMain extends Component {\n\n\t// this.addThread = this.addThread.bind(this);\n\t// this.addTitle = this.addTitle.bind(this);\n\n\tstate = {\n\t\tthreads: [\n\t\t\t{ title: 'Introduction Thread', body: ' First time visiting? Click here!', user: '', date: Date.now }\n\t\t],\n\t};\n\t// componentDidMount() {\n\t// \tthis.loadThreads();\n\t// }\n\n\tloadThreads = () => {\n\t\tAPI.getThreads()\n\t\t\t.then(res =>\n\t\t\t\tthis.setState({ threads: this.props.newState })\n\t\t\t)\n\t\t\t.catch(err => console.log(err));\n\t};\n\n\t// addThread(newThreadBody) {\n\t// \tconst newState = Object.assign({}, this.state)\n\t// \tnewState.threads.push(newThreadBody);\n\t// \tthis.setState(newState);\n\t// }\n\t// addTitle(newThreadTitle) {\n\t// \tconst newState = Object.assign({}, this.state)\n\t// \tnewState.title.push(newThreadTitle);\n\t// \tthis.setState(newState);\n\t// }\n\n\taddThread = (newThread) => {\n\t\tlet newState = [...this.state.threads, newThread]\n\t\tAPI.saveThreads({\n\t\t\tthreads: newState\n\t\t})\n\t\t\t.then(res => this.loadThreads())\n\t\t\t.catch(err => console.log(err));\n\t\tthis.setState({\n\t\t\tthreads: newState,\n\t\t\t// posts: id = Math.random()\n\t\t});\n\t}\n\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.state.threads.map((threads, index) => (\n\n\t\t\t\t\t<ThreadTextDisplay\n\t\t\t\t\t\tbody={threads.body}\n\t\t\t\t\t\ttitle={threads.title}\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t/>\n\n\t\t\t\t)\n\t\t\t\t)}\n\t\t\t\t{/* {this.state.threads.map((threads, index) => (\n\n\t\t\t\t\t<ThreadTextDisplay\n\t\t\t\t\t\tthreads={threads.body}\n\t\t\t\t\t\tkey={index} />\n\t\t\t\t)\n\t\t\t\t)} */}\n\n\t\t\t\t<ThreadEditor addThread={this.addThread} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ThreadMain;","import React from 'react';\n\nconst Post = (props) => (\n\t<div className='card post post-body'>\n          <div className='card-content' key={props.key}>\n            {props.post}\n          </div>\n        </div>\n);\nexport default Post; ","import React, { Component } from 'react';\nimport { TextInput, Button, Icon } from 'react-materialize';\n\n\nclass PostEditor extends Component {\n\t// constructor(props) {\n\t\t// super(props);\n\n\t\tstate = {\n\t\t\t body: '',\n\t\t\t date: Date.now,\n\t\t\t user: '',\n\n\t\t};\n\n\t// \tthis.handlePostEditorInputChange = this.handlePostEditorInputChange.bind(this);\n\t// \tthis.createPost = this.createPost.bind(this);\n\n\t// }\n\n\thandlePostEditorInputChange = (ev) => {\n\t\tthis.setState({\n\t\t   body: ev.target.value\n\t\t});\n\t  }\n\n\t  createPost = (ev) => {\n\t\t  ev.preventDefault();\n\t\t  const newEntry = {user: \"\", body: this.state.body, date: Date.now};\n\t\t  this.props.addPost(newEntry);\n\t\t  this.setState({\n\t\t\t   body: '',\n\t\t\t   date: '',\n\t\t\t   user: ''\n\t\t  })\n\t\t  console.log(this.state)\n\t  }\n\n\trender() {\n\t\treturn (\n\n\t\t\t<div className='card post-editor'>\n\t\t\t\t<div className='card-content'>\n\t\t\t\t\t<TextInput className=\"post-editor-input\" label=\"Add something nice!\" value={this.state.body} onChange={this.handlePostEditorInputChange} />\n\t\t\t\t\t<Button className=\"post-editor-button\" type=\"submit\" waves=\"light\" onClick={this.createPost}>\n\t\t\t\t\t\tPost\n                <Icon right>\n\t\t\t\t\t\t\tsend\n                </Icon>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t)\n\t}\n\n\n}\nexport default PostEditor; ","import React, { Component } from 'react';\nimport Post from \"../../components/Post/post\";\nimport PostEditor from \"../../components/PostEditor/postEditor\";\nimport API from \"../../utlis/API\";\nclass ThreadDisplay extends Component {\n\n\t\n\t\tstate = {\n\t\t\tposts: [\n\t\t\t\t{user: \"\", id:1, body:\"Welcome to the forum!\", date: Date.now}\n\t\t\t],\n\t\t};\n\t\n\t\tloadPosts = () => {\n\t\t\tAPI.getPosts()\n\t\t\t  .then(res =>\n\t\t\t\tthis.setState({ posts: this.props.newState})\n\t\t\t  )\n\t\t\t  .catch(err => console.log(err));\n\t\t  };\n\t\t\n\n\taddPost = (newPostBody) => {\n\t\tlet newState = [...this.state.posts, newPostBody]\n\t\tAPI.savePosts({\n\t\t\tposts: newState\n\t\t})\n\t\t.then(res => this.loadPosts())\n\t\t.catch(err => console.log(err));\n\t\tthis.setState({\n\t\t\tposts: newState,\n\t\t\t// posts: id = Math.random()\n\t\t});\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.state.posts.map((post, index) => (\n\t\t\t\t\t<Post \n\t\t\t\t\tpost={post.body} \n\t\t\t\t\tkey={index}/>\n\t\t\t\t)\n\t\t\t\t\t\n\t\t\t\t\t)}\n\t\t\t\t{/* <Post posts={this.state.posts} /> */}\n\t\t\t\t<PostEditor addPost={this.addPost} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ThreadDisplay;","import React, {Component} from 'react';\nimport {NavItem, Navbar} from \"react-materialize\";\n\nclass Nav extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Navbar alignLinks=\"left\">\n\t\t\t<NavItem href= '/main'>\n\t\t\tMain\n\t\t\t</NavItem>\n\t\t\t<NavItem href=\"/forum\">\n\t\t\tForum\n\t\t\t</NavItem>\n\t\t\t<NavItem href=\"/signIn\">\n\t\t\tSign In\n\t\t\t</NavItem>\n\t\t\t<NavItem href=\"/signUp\">\n\t\t\tSign Up\n\t\t\t</NavItem>\n\t\t\t\n\t\t\t</Navbar>\n\t\t)}\n}\n\nexport default Nav;","import React, { Component } from 'react'\n\nclass signIn extends Component {\n    state = {\n      email: '',\n      password: ''  \n    }\n    handleChange = (e) => {\n        this.setState({\n           [e.target.id]: e.target.value \n        })\n    }\n    hanldeSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state)\n    }\n    render() {\n        return (\n            <div className= \"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                   <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                   <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                   </div>\n                   <div className=\"input-field\">\n                       <label htmlFor=\"password\">Password</label>\n                       <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                   </div>\n                   <div className=\"input-field\">\n                       <button className=\"btn blue lighten-1 z-depth-0\">Login</button>\n                   </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default signIn","import React, { Component } from 'react'\n\nclass signUp extends Component {\n    state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: ''  \n    }\n    handleChange = (e) => {\n        this.setState({\n           [e.target.id]: e.target.value \n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state)\n    }\n    render() {\n        return (\n            <div className= \"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                   <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                   <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                   </div>\n                   <div className=\"input-field\">\n                       <label htmlFor=\"password\">Password</label>\n                       <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                   </div>\n                   <div className=\"input-field\">\n                       <label htmlFor=\"firstName\">First Name</label>\n                       <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                   </div>\n                   <div className=\"input-field\">\n                       <label htmlFor=\"lastName\">Last Name</label>\n                       <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                   </div>\n                   <div className=\"input-field\">\n                       <button className=\"btn blue lighten-1 z-depth-0\">Sign Up</button>\n                   </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default signUp","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ThreadMain from \"./pages/ThreadMain/threadMain\";\nimport ThreadDisplay from \"./pages/ThreadDisplay/threadDisplay\";\nimport Nav from \"./components/Nav/nav\";\nimport signIn from \"./components/LoginPage/signIn\";\nimport signUp from \"./components/LoginPage/signUp\";\n\n\n\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n    <Router>\n      <div>\n      <Nav />\n      <Switch>\n        {/* <Route exact path=\"/\" component={Books} /> */}\n        <Route exact path=\"/forum\" component={ThreadMain} />\n        <Route exact path=\"/thread\" component={ThreadDisplay} />\n        <Route exact path='/signIn' component={signIn} />\n        <Route exact path='/signUp' component={signUp} />\n      </Switch>\n    </div>\n  </Router>      \n    );\n  }\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'materialize-css/dist/css/materialize.min.css'\nimport 'react-materialize'\nimport 'jquery';\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}